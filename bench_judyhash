#!/bin/sh

###############################################################

BOOST_INCLUDE_DIR=-I/usr/include/boost
STLPORT_INCLUDE_DIR=-I/usr/include/stlport
ADDON_INCLUDE_DIR="-I/usr/local/include -I$HOME/local/`hostname`/include"
OPTFLAGS='-O3'
#OPTFLAGS='-O3 -DJUDYHASH_USE_NEW'
TESTED_TYPE=-DTYPE_STD_STRING
#TESTED_TYPE=-DTYPE_CHAR_PTR
TESTFILE=$HOME/texts/5000.out

MCOUNT=15 # a number of measurements
MAX_LINE=10000000
#MCOUNT=2 # a number of measurements
#MAX_LINE=3162277

###############################################################

lines=$(awk "BEGIN {
	base=exp(log($MAX_LINE) * 1/($MCOUNT-1))
	for (i=0; i < $MCOUNT; ++i){
		print int(exp(log(base) * i))
	}
}")

test_judyarray (){
    CXX=$1
    CPPFLAGS=$2
    CFLAGS=$3
    LDFLAGS=$4
    DEFINES=$5

    compile_cmd="$CXX -o judytest $CPPFLAGS $DEFINES $CFLAGS $LDFLAGS main.cpp"
    echo "Compile: $compile_cmd"
    $compile_cmd 2>log || exit 1
    for i in $lines; do
	printf "$i LINES: "
	time -p ./judytest $i < $TESTFILE 2> log_stderr 1> log_stdout
	if test $? -eq 0; then
	    awk '/user/ {print $2}' log_stderr
	else
	    echo failed
	fi
    done
    echo '' 1>&2
}

for gpp in g++; do
    which $gpp || continue

    # just file reading 
     test_judyarray $gpp         \
	"$BOOST_INCLUDE_DIR $ADDON_INCLUDE_DIR" \
	"$OPTFLAGS"             \
	""                      \
	"$TESTED_TYPE -DEMPTY_LOOP"

    # g++ STL
    test_judyarray $gpp         \
	"$BOOST_INCLUDE_DIR $ADDON_INCLUDE_DIR" \
	"$OPTFLAGS"             \
	""                      \
	"$TESTED_TYPE -DUSE_GOOGLE_DENSE_MAP"
    test_judyarray $gpp         \
	"$BOOST_INCLUDE_DIR $ADDON_INCLUDE_DIR" \
	"$OPTFLAGS"             \
	""                     \
	"$TESTED_TYPE -DUSE_STD_MAP"
    test_judyarray $gpp         \
	"$BOOST_INCLUDE_DIR $ADDON_INCLUDE_DIR" \
	"$OPTFLAGS"             \
	"-lJudy"               \
	"$TESTED_TYPE -DUSE_JUDY_HASH"
    test_judyarray $gpp         \
	"$BOOST_INCLUDE_DIR $ADDON_INCLUDE_DIR" \
	"$OPTFLAGS"            \
	""                     \
	"$TESTED_TYPE -DUSE_HASH_MAP"

    # STLPORT STL
    test_judyarray $gpp         \
	"$STLPORT_INCLUDE_DIR $BOOST_INCLUDE_DIR $ADDON_INCLUDE_DIR" \
	"$OPTFLAGS"            \
	"-lstlport -lm "       \
	"$TESTED_TYPE -DUSE_GOOGLE_DENSE_MAP"
    test_judyarray $gpp         \
	"$STLPORT_INCLUDE_DIR $BOOST_INCLUDE_DIR $ADDON_INCLUDE_DIR" \
        "$OPTFLAGS"            \
	"-lstlport -lm"        \
	"$TESTED_TYPE -DUSE_STD_MAP"
    test_judyarray $gpp         \
	"$STLPORT_INCLUDE_DIR $BOOST_INCLUDE_DIR $ADDON_INCLUDE_DIR" \
        "$OPTFLAGS"            \
	"-lstlport -lm -lJudy" \
	"$TESTED_TYPE -DUSE_JUDY_HASH"
    test_judyarray $gpp         \
	"$STLPORT_INCLUDE_DIR $BOOST_INCLUDE_DIR $ADDON_INCLUDE_DIR" \
        "$OPTFLAGS"            \
	"-lstlport -lm"        \
	"$TESTED_TYPE -DUSE_HASH_MAP"
done
